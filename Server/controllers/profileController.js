const Profile = require("../models/Profile");
const User = require("../models/User");

/**
 * üü¢ L·∫•y h·ªì s∆° c·ªßa ng∆∞·ªùi d√πng hi·ªán t·∫°i
 * GET /api/profile/me
 */
exports.getMyProfile = async (req, res) => {
  try {
    const userId = req.user.id; // ‚úÖ l·∫•y t·ª´ JWT (middleware verifyToken)

    // T√¨m h·ªì s∆° v√† k√®m th√¥ng tin user c∆° b·∫£n
    let profile = await Profile.findOne({ userId }).populate(
      "userId",
      "fullname email phone role avatar"
    );

    // N·∫øu ch∆∞a c√≥ profile, t·∫°o profile m·ªõi
    if (!profile) {
      profile = await Profile.create({
        userId,
        bietDanh: "",
        gioiTinh: "other",
        mangXaHoi: {},
        anhDaiDien: "",
      });

      // Populate user info
      profile = await Profile.findOne({ userId }).populate(
        "userId",
        "fullname email phone role avatar"
      );
    }

    res.status(200).json(profile);
  } catch (error) {
    res
      .status(500)
      .json({ message: "L·ªói khi l·∫•y h·ªì s∆° ng∆∞·ªùi d√πng", error: error.message });
  }
};

/**
 * üü° C·∫≠p nh·∫≠t h·ªì s∆° c√° nh√¢n
 * PUT /api/profile/me
 */
exports.updateMyProfile = async (req, res) => {
  try {
    const userId = req.user.id;
    const { bietDanh, gioiTinh, mangXaHoi, anhDaiDien } = req.body;

    const updatedProfile = await Profile.findOneAndUpdate(
      { userId },
      { bietDanh, gioiTinh, mangXaHoi, anhDaiDien },
      { new: true }
    );

    if (!updatedProfile) {
      return res
        .status(404)
        .json({ message: "Kh√¥ng t√¨m th·∫•y h·ªì s∆° ƒë·ªÉ c·∫≠p nh·∫≠t" });
    }

    res.status(200).json({
      message: "C·∫≠p nh·∫≠t h·ªì s∆° th√†nh c√¥ng",
      profile: updatedProfile,
    });
  } catch (error) {
    res
      .status(500)
      .json({ message: "L·ªói khi c·∫≠p nh·∫≠t h·ªì s∆°", error: error.message });
  }
};

/**
 * üî¥ X√≥a h·ªì s∆° (t√πy ch·ªçn)
 * DELETE /api/profile/me
 */
exports.deleteMyProfile = async (req, res) => {
  try {
    const userId = req.user.id;
    await Profile.findOneAndDelete({ userId });
    res.status(200).json({ message: "ƒê√£ x√≥a h·ªì s∆° ng∆∞·ªùi d√πng" });
  } catch (error) {
    res
      .status(500)
      .json({ message: "L·ªói khi x√≥a h·ªì s∆°", error: error.message });
  }
};

exports.createMyProfile = async (req, res) => {
  try {
    const userId = req.user.id;

    // Ki·ªÉm tra xem ƒë√£ c√≥ h·ªì s∆° ch∆∞a
    const exist = await Profile.findOne({ userId });
    if (exist) {
      return res.status(400).json({ message: "H·ªì s∆° ƒë√£ t·ªìn t·∫°i" });
    }

    const { bietDanh, gioiTinh, mangXaHoi, anhDaiDien } = req.body;

    const newProfile = await Profile.create({
      userId,
      bietDanh: bietDanh || "",
      gioiTinh: gioiTinh || "other",
      mangXaHoi: mangXaHoi || {},
      anhDaiDien: anhDaiDien || "",
    });

    res.status(201).json({
      message: "T·∫°o h·ªì s∆° th√†nh c√¥ng",
      profile: newProfile,
    });
  } catch (error) {
    res
      .status(500)
      .json({ message: "L·ªói khi t·∫°o h·ªì s∆°", error: error.message });
  }
};
